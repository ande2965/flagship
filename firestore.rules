rules_version = '2';

// function isUserOnCampaign(database, campaignId) {
//   return campaignId != null && 
//   request.auth.uid in get(/databases/$(database)/documents/campaigns/$(campaignId)).data.playerUids;
// }


service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read, update, delete: if request.auth.uid == userId;
      allow create: if request.auth.uid != null;
    }
    match /settings/{userId} {
      allow read, update, delete, create: if request.auth.uid == userId;
    }
    match /fleets/{fleetId} {
      function isUserOnCampaign() {
        return resource.data.campaignId != null && 
          request.auth.uid in get(/databases/$(database)/documents/campaigns/$(resource.data.campaignId)).data.playerUids;
      }
      function isUserOwnerOnCampaign() {
        return resource.data.campaignId != null && 
          request.auth.uid == get(/databases/$(database)/documents/campaigns/$(resource.data.campaignId)).data.ownerUid;
      }
      allow read: if resource.data.isPublic || request.auth.uid == resource.data.ownerUid || isUserOnCampaign();
      allow update: if request.auth.uid == resource.data.ownerUid || isUserOnCampaign();
      allow delete: if request.auth.uid == resource.data.ownerUid || isUserOwnerOnCampaign();
      allow create: if request.auth.uid != null;
    }
    match /campaigns/{campaignId} {
      allow read, update: if request.auth.uid in resource.data.playerUids || request.auth.uid == resource.data.ownerUid;
      allow delete: if request.auth.uid == resource.data.ownerUid;
      allow create: if request.auth.uid != null;
    }
    match /invites/{inviteToken} {
      allow read: if true;
      allow create, update, delete: if request.auth.uid != null;
    }
    match /{document=**} {
      allow read, write: if false;
    }
  }
}